AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'SAM Template for timeticker'
Globals:
  Function:
    Timeout: 120
    MemorySize: 128

Parameters:
  "Environment":
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "prod"
  "Log1Url":
    Type: String
    Description: "Log1 URL"

Resources:

  ChannelMappingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub
        - 'TaskTickerChannelMapping-${Env}'
        - Env: !Ref Environment
      DeletionProtectionEnabled: true
      AttributeDefinitions:
        - AttributeName: channel_id
          AttributeType: S
      KeySchema:
        - AttributeName: channel_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  UpdateLogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub
        - 'TaskTickerUpdateLog-${Env}'
        - Env: !Ref Environment
      DeletionProtectionEnabled: true
      AttributeDefinitions:
        - AttributeName: channel_id
          AttributeType: S
      KeySchema:
        - AttributeName: channel_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ProjectUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: taskticker/
      Handler: handlers.update_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ChannelMappingTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UpdateLogTable
        - SSMParameterReadPolicy:
            ParameterName: taskticker-*
      Environment:
        Variables:
          ENV: !Ref Environment
          CHANNEL_MAPPING_TABLE_NAME: !Ref ChannelMappingTable
          LOG1_URL: !Ref Log1Url
          UPDATE_LOG_TABLE_NAME: !Ref UpdateLogTable
      Architectures:
        - x86_64
      Layers:
        - Ref: libs

  TaskTickerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: taskticker/
      Handler: handlers.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ChannelMappingTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UpdateLogTable
        - SSMParameterReadPolicy:
            ParameterName: taskticker-*
        - LambdaInvokePolicy:
            FunctionName: !Ref ProjectUpdateFunction
      Environment:
        Variables:
          ENV: !Ref Environment
          CHANNEL_MAPPING_TABLE_NAME: !Ref ChannelMappingTable
          LOG1_URL: !Ref Log1Url
          PROJECT_UPDATE_FUNCTION_NAME: !Ref ProjectUpdateFunction
          UPDATE_LOG_TABLE_NAME: !Ref UpdateLogTable
      Architectures:
        - x86_64
      Events:
        mainApi:
          Type: Api
          Properties:
            Path: /app
            Method: post
        crudEvent:
          Type: Schedule
          Properties:
            State: ENABLED
            Schedule: 'cron(0 14 * * ? *)' # UTC 14:00 & IST 19:30
            Description: Daily Update Schedule
            Input:
              trigger_type: UPDATES_REMINDER
        cleanupEvent:
          Type: Schedule
          Properties:
            State: ENABLED
            Schedule: 'cron(30 21 * * ? *)' # UTC 21:30 & IST 3:00
            Description: Update log cleanup schedule
            Input:
              trigger_type: CLEANUP_EVENT
      Layers:
      - Ref: libs
  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: requirement-layer
      Description: Lambda layer with libs like pocket and datetime
      ContentUri: ./libs

Outputs:
  TaskTickerApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/app
